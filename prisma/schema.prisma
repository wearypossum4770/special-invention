datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  username   String    @unique
  firstName  String
  middleName String?
  lastName   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  password   Password?
  profile    Profile?
}

model Profile {
  id        String   @id @default(cuid())
  avatar    String
  bio       String?
  notes     Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String   @unique
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profileId String
}

model Post {
  slug        String    @id
  title       String
  markdown    String?
  content     String?
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


  model TaskComments {
    id           String @id
    idempotentId String @default(uuid())
    content      String
    task         Task   @relation(fields: [idempotentId], references: [idempotentId])
  }
  
   
  model Task {
    id           Int          @id @default(autoincrement())
    idempotentId String         @default(uuid()) @unique
    title  String
    content       String
    isCompleted Boolean @default(false)
    comments     TaskComments[]
  }

   
  

  model Project {
    id           String  @id
    idempotentId String  @default(uuid())
    title        String
    subtitle     String?
    description  String?
    projectKey   String
    type         String
    favourite    Boolean @default(false)
    projectType  String
  }
 
  